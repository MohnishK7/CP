//TCS NQT
   string s;
   cin >> s;
   string s1;
   cin >> s1;
   int m = s.length();
   int n = s1.length();

   // int cnt  = 0;
   // int cnt1 = 0;
   // for (int i = 0; i < s.length(); i++) {
   //    cnt++;
   // }
   // for (int i = 0; i < s1.length(); i++) {
   //    cnt1++;
   // }

   // cout << abs(cnt - cnt1);
   // will fail in test case when there is no string match

   int res = -1;
   for (int i = 0; i < m - n + 1; i++) {
      int j;
      for (j = 0; j < n; j++) {
         if (s[i + j] != s1[j]) {
            break;
         }
      }
      if (j == n) {
         // Entire substring is found
         res = i;
         break;
      }
   }

   if (res != -1) {
      cout << res;
   } else {
      cout << -1;
   }

   return 0;
}
